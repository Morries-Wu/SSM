<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="factory"/>
        <property name="basePackage" value="Tran_sale.Items.Item03.Dao"></property>
    </bean>

    <bean id="buyService" class="Tran_sale.Items.Item03.Service.Impl.BuyGoodsServiceImpl">
        <property name="goodsDao" ref="goodsDao"></property>
        <property name="saleDao" ref="saleDao"></property>
    </bean>

    <!--声明式事:不用写代码-->
    <!--1、声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--指定数据源-->
        <property name="dataSource" ref="myDataSource"/>
    </bean>

    <!--2、声明业务方法的事务属性(隔离级别,传播行为,超时)
        id:给业务方法配置事务段代码起个名称,唯一值
        transaction-manager:事务管理器的id
    -->

    <tx:advice id="serviceAdvice" transaction-manager="transactionManager">
        <!--给具体的业务方法增加事务的说明-->
        <tx:attributes>
            <!--
                给具体的业务方法,说明他需要的事务属性
                name:业务方法的名称
                配置name的值:1、业务方法的名称 2、带有部分通配符的名称 3、使用*
                propagation:指定的传播行为的值
                isolation:隔离级别
                read-only:是否只读,默认是false
                timeout:超时时间
                rollback-for:指定回滚的异常类列表,使用的异常全限定名称
                -->
            <tx:method name="buy"  propagation="REQUIRED" isolation="DEFAULT"
                       read-only="false" timeout="20"
                       rollback-for="java.lang.NullPointerException,
                       Tran_sale.Items.Item03.excetion.NotEnougthException"/>

            <tx:method name="buy*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="query*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="find*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <!--以上方法以外的-->
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>


    <!--声明切入点表达式:表示那些包中的类,类中的方法参与事务-->
    <aop:config>
        <!--声明切入点表达式:表示那些包中的类,类中的方法参与事务
        expression:切入点表达式,表示那些类和类中的方法要参与事务
        id-->
        <!--任意权限、任意类型、子包下面的含有service包中的子包、任意类的任意方法、任意参数-->
        <aop:pointcut id="servicePointcut" expression="execution(* *..service..*.*(..))"/>
        <!--关联接入点表达式和事务通知-->
        <aop:advisor advice-ref="serviceAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>








</beans>