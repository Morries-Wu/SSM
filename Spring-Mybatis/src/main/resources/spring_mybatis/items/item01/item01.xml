<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--加载外部的属性配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--创建DataSource对象在容器中-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--声明SqlSessionFactoryBean,在这个类的内部,创建SqlSessionFactory对象-->
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--直接在容器中引用创建好的DataSource对象-->
        <property name="dataSource" ref="myDataSource"/>
        <!--
            指定mybatis主配置文件
            Resource可以直接使用value属性赋值
          -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>

    <!--声明MapperScannerConfigurer
        SqlSession.getMapper(StudentDao.class)

        MapperScannerConfigurer作用是:
        循环basePackage所表示的包,把包中的每个接口都找到,调用SqlSession.getMapper
        把每个Dao接口都创建出dao对象,dao代理对象放在容器中

        ApplicationContext ctx=......
        SqlSessionFactory sqlSessionFactory=ctx.getBean("factory");
        SqlSession session=sqlSessionFactory.openSession();
        for(接口: spring_mybatis.items.item01.Dao){
                接口 对象=session.getMapper(接口);
                springMap.put(对象名,对象)
        }
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定SqlSessionFactory对象的名称-->
        <property name="sqlSessionFactoryBeanName" value="factory"/>
        <!--指定基本包,dao接口所在的包名直接在容器中创建好-->
        <property name="basePackage" value="spring_mybatis.items.item01.Dao"/>
    </bean>

    <!--声明service-->
    <bean id="studentService" class="spring_mybatis.items.item01.Service.Impl.ServiceStudentImpl">
        <property name="studentDao" ref="studentDao"/>
    </bean>

</beans>