<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--springmvc的配置文件-->
    <!--声明组件扫描器-->
    <context:component-scan base-package="com.Items.item06.controller"/>

    <!--声明视图解析器,帮助处理视图-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀:指定视图文件的路径-->
        <property name="prefix" value="/WEB-INF/View/"/>
        <!--后缀:视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>



    <!--声明静态资源的第一种方式
        创建DefaultServletHttpRequestHandler处理静态资源
        DefaultServletHttpRequestHandler把接收的静态资源的地址
        转发给了tomcat的default
        优点:解决方式简单
        缺点:依赖tomcat服务器提供的能力
        -->
    <!--<mvc:default-servlet-handler/>-->

    <!--声明静态资源的第二种处理方式
        mapping:访问静态资源的uri地址,可以使用通配符
        **:表示任意的目录和目录资源名称
        location:静态资源在项目中的位置,不要使用/WEB-INF
    -->
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/HTML/**" location="/HTML/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>


    <!--声明注解驱动:
    default-servlet-handler和@RequestMapping使用有冲突-->
    <mvc:annotation-driven/>
    <!--异常处理-->
    <context:component-scan base-package="com.Items.item06.Handle"/>

    <!--声明拦截器-->
    <mvc:interceptors>
        <!--声明第一个拦截器-->
        <mvc:interceptor>
            <!--指定拦截器的拦截地址
                path:拦截的uri地址,使用**通配符
                例如:path="/user/**"  就意味着请求以user开头的都将被拦截器先拦截
                http://localhost:8080/user/listUser.do
                http://localhost:8080/user/query/queryUser.do
                -->
            <mvc:mapping path="/**"/>
            <!--指定使用的拦截器-->
            <bean class="com.Items.item06.Handle.MyInterceptor"/>
        </mvc:interceptor>
        <!--声明第二个拦截器-->
        <!--<mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.Items.item05.Handle.MyInterceptor02"/>
        </mvc:interceptor>-->
    </mvc:interceptors>

</beans>
